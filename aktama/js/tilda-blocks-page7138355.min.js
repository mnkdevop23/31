window.isMobile = !1;
if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
    window.isMobile = !0
}
window.isiOS = !1;
if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {
    window.isiOS = !0
}
window.isiOSVersion = '';
if (window.isiOS) {
    var version = (navigator.appVersion).match(/OS (\d+)_(\d+)_?(\d+)?/);
    if (version !== null) {
        window.isiOSVersion = [parseInt(version[1], 10), parseInt(version[2], 10), parseInt(version[3] || 0, 10)]
    }
}

function t_throttle(fn, threshhold, scope) {
    var last;
    var deferTimer;
    threshhold || (threshhold = 250);
    return function() {
        var context = scope || this;
        var now = +new Date();
        var args = arguments;
        if (last && now < last + threshhold) {
            clearTimeout(deferTimer);
            deferTimer = setTimeout(function() {
                last = now;
                fn.apply(context, args)
            }, threshhold)
        } else {
            last = now;
            fn.apply(context, args)
        }
    }
}

function t121_setHeight(recid) {
    var rec = document.getElementById('rec' + recid);
    if (!rec) return;
    var videoBlock = document.getElementById('youtubeiframe' + recid);
    var videoParent = videoBlock ? videoBlock.parentNode : null;
    var videoWidth = videoBlock ? videoBlock.offsetWidth : 0;
    var videoHeight = videoWidth * 0.5625;
    if (videoBlock) videoBlock.style.height = videoHeight + 'px';
    if (videoParent) videoParent.style.height = videoHeight + 'px';
    var videoLazy = rec ? rec.querySelector('.t-video-lazyload') : null;
    if (videoLazy) {
        var iframeLazy = videoLazy.querySelector('iframe');
        var heightLazy = videoLazy.offsetWidth * 0.5625;
        videoLazy.style.height = heightLazy + 'px';
        if (iframeLazy) iframeLazy.style.height = heightLazy + 'px';
        setTimeout(function() {
            videoBlock = document.getElementById('youtubeiframe' + recid);
            videoWidth = videoBlock ? videoBlock.offsetWidth : 0;
            if (videoBlock) videoBlock.style.height = (videoWidth * 0.5625) + 'px'
        }, 200)
    }
}

function t803_init(recid) {
    var rec = document.getElementById('rec' + recid);
    if (!rec) return;
    var cardsMultiData = rec.querySelector('.t803__multi-datablock').children;
    var multidata = {};
    Array.prototype.forEach.call(cardsMultiData, function(card) {
        var source = card.querySelector('.t803__multi-source').innerHTML;
        var value = card.querySelector('.t803__multi-key-values').innerHTML;
        var key = card.querySelector('.t803__multi-key').innerHTML;
        var defaultValue = card.querySelector('.t803__multi-default').innerHTML;
        var values = {};
        values[source] = value;
        multidata[source] = {
            default: defaultValue,
            key: key,
            values: values
        }
    });
    if (rec.closest('#t-header') || rec.closest('#t-footer')) {
        Array.prototype.forEach.call(document.querySelectorAll('.t-rec div, .t-rec span, .t-rec a, .t-rec p'), function(item) {
            var html = item.innerHTML;
            var replaced = html.replace(/(?!%%)[A-zА-яё0-9_-]*(?=%%)/gi, '<span data-replace-key=\'$&\'></span>').replace(/%{2}/gim, '');
            if (replaced !== html) {
                item.innerHTML = replaced
            }
        })
    }
    var params = window.location.search.replace('?', '').split('&').reduce(function(paramsObject, paramsItem) {
        var paramsItemSplitted = paramsItem.split('=');
        try {
            paramsObject[decodeURIComponent(paramsItemSplitted[0]) + '=' + decodeURIComponent(paramsItemSplitted[1])] = decodeURIComponent(paramsItemSplitted[0]) + '=' + decodeURIComponent(paramsItemSplitted[1])
        } catch (error) {}
        return paramsObject
    }, {});
    var stop = 0;
    for (utmTerm in multidata) {
        var key = params[utmTerm];
        if (typeof key !== 'undefined') {
            var allMacros = document.querySelectorAll('[data-replace-key="' + multidata[utmTerm].key + '"]');
            Array.prototype.forEach.call(allMacros, function(macros) {
                macros.innerHTML = multidata[utmTerm].values[key]
            });
            stop = 1
        }
        if (stop === 0) {
            var allMacros = document.querySelectorAll('[data-replace-key="' + multidata[utmTerm].key + '"]');
            Array.prototype.forEach.call(allMacros, function(macros) {
                macros.innerHTML = multidata[utmTerm].default
            })
        }
    }
}
if (!Element.prototype.matches) {
    Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.oMatchesSelector
}
if (!Element.prototype.closest) {
    Element.prototype.closest = function(s) {
        var rec = this;
        while (rec && rec.nodeType === 1) {
            if (Element.prototype.matches.call(rec, s)) {
                return rec
            }
            rec = rec.parentElement || rec.parentNode
        }
        return null
    }
}

function t702_initPopup(recId) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var container = rec.querySelector('.t702');
    if (!container) return;
    rec.setAttribute('data-animationappear', 'off');
    rec.setAttribute('data-popup-subscribe-inited', 'y');
    rec.style.opacity = 1;
    var documentBody = document.body;
    var popup = rec.querySelector('.t-popup');
    var popupTooltipHook = popup.getAttribute('data-tooltip-hook');
    var analitics = popup.getAttribute('data-track-popup');
    var popupCloseBtn = popup.querySelector('.t-popup__close');
    var hrefs = rec.querySelectorAll('a[href*="#"]');
    var submitHref = rec.querySelector('.t-submit[href*="#"]');
    if (popupTooltipHook) {
        var recBlocks = document.querySelectorAll('.r');
        t_onFuncLoad('t_popup__addAttributesForAccessibility', function() {
            t_popup__addAttributesForAccessibility(popupTooltipHook)
        });
        for (var i = 0; i < recBlocks.length; i++) {
            recBlocks[i].addEventListener('click', function(event) {
                var target = event.target;
                var href = target.closest('a[href$="' + popupTooltipHook + '"]') ? target : !1;
                if (!href) return;
                event.preventDefault();
                t702_showPopup(recId);
                t_onFuncLoad('t_popup__resizePopup', function() {
                    t_popup__resizePopup(recId)
                });
                t702__lazyLoad();
                if (analitics && window.Tilda) {
                    Tilda.sendEventToStatistics(analitics, popupTooltipHook)
                }
            });
            t_onFuncLoad('t_popup__addClassOnTriggerButton', function() {
                t_popup__addClassOnTriggerButton(recBlocks[i], popupTooltipHook)
            })
        }
    }
    popup.addEventListener('scroll', t_throttle(function() {
        t702__lazyLoad()
    }));
    popup.addEventListener('click', function(event) {
        var windowWithoutScrollBar = window.innerWidth - 17;
        if (event.clientX > windowWithoutScrollBar) return;
        if (event.target === this) t702_closePopup(recId)
    });
    popupCloseBtn.addEventListener('click', function() {
        t702_closePopup(recId)
    });
    if (submitHref) {
        submitHref.addEventListener('click', function() {
            if (documentBody.classList.contains('t-body_scroll-locked')) {
                documentBody.classList.remove('t-body_scroll-locked')
            }
        })
    }
    for (var i = 0; i < hrefs.length; i++) {
        hrefs[i].addEventListener('click', function() {
            var url = this.getAttribute('href');
            if (!url || url.substring(0, 7) != '#price:') {
                t702_closePopup(recId);
                if (!url || url.substring(0, 7) == '#popup:') {
                    setTimeout(function() {
                        documentBody.classList.add('t-body_popupshowed')
                    }, 300)
                }
            }
        })
    }

    function t702_escClosePopup(event) {
        if (event.key === 'Escape') t702_closePopup(recId)
    }
    popup.addEventListener('tildamodal:show' + popupTooltipHook, function() {
        document.addEventListener('keydown', t702_escClosePopup)
    });
    popup.addEventListener('tildamodal:close' + popupTooltipHook, function() {
        document.removeEventListener('keydown', t702_escClosePopup)
    })
}

function t702_lockScroll() {
    var documentBody = document.body;
    if (!documentBody.classList.contains('t-body_scroll-locked')) {
        var bodyScrollTop = typeof window.pageYOffset !== 'undefined' ? window.pageYOffset : (document.documentElement || documentBody.parentNode || documentBody).scrollTop;
        documentBody.classList.add('t-body_scroll-locked');
        documentBody.style.top = '-' + bodyScrollTop + 'px';
        documentBody.setAttribute('data-popup-scrolltop', bodyScrollTop)
    }
}

function t702_unlockScroll() {
    var documentBody = document.body;
    if (documentBody.classList.contains('t-body_scroll-locked')) {
        var bodyScrollTop = documentBody.getAttribute('data-popup-scrolltop');
        documentBody.classList.remove('t-body_scroll-locked');
        documentBody.style.top = null;
        documentBody.removeAttribute('data-popup-scrolltop');
        document.documentElement.scrollTop = parseInt(bodyScrollTop)
    }
}

function t702_showPopup(recId) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var container = rec.querySelector('.t702');
    if (!container) return;
    var popup = rec.querySelector('.t-popup');
    var popupTooltipHook = popup.getAttribute('data-tooltip-hook');
    var range = rec.querySelector('.t-range');
    var documentBody = document.body;
    if (range) t702__triggerEvent(range, 'popupOpened');
    t_onFuncLoad('t_popup__showPopup', function() {
        t_popup__showPopup(popup)
    });
    documentBody.classList.add('t-body_popupshowed');
    documentBody.classList.add('t702__body_popupshowed');
    if (/iPhone|iPad|iPod/i.test(navigator.userAgent) && !window.MSStream && window.isiOSVersion && window.isiOSVersion[0] === 11) {
        setTimeout(function() {
            t702_lockScroll()
        }, 500)
    }
    t702__lazyLoad();
    t702__triggerEvent(popup, 'tildamodal:show' + popupTooltipHook)
}

function t702_closePopup(recId) {
    var rec = document.getElementById('rec' + recId);
    var popup = rec.querySelector('.t-popup');
    var popupTooltipHook = popup.getAttribute('data-tooltip-hook');
    var popupAll = document.querySelectorAll('.t-popup_show:not(.t-feed__post-popup):not(.t945__popup)');
    if (popupAll.length == 1) {
        document.body.classList.remove('t-body_popupshowed')
    } else {
        var newPopup = [];
        for (var i = 0; i < popupAll.length; i++) {
            if (popupAll[i].getAttribute('data-tooltip-hook') === popupTooltipHook) {
                popupAll[i].classList.remove('t-popup_show');
                newPopup.push(popupAll[i])
            }
        }
        if (newPopup.length === popupAll.length) {
            document.body.classList.remove('t-body_popupshowed')
        }
    }
    popup.classList.remove('t-popup_show');
    document.body.classList.remove('t702__body_popupshowed');
    if (/iPhone|iPad|iPod/i.test(navigator.userAgent) && !window.MSStream && window.isiOSVersion && window.isiOSVersion[0] === 11) {
        t702_unlockScroll()
    }
    t_onFuncLoad('t_popup__addFocusOnTriggerButton', function() {
        t_popup__addFocusOnTriggerButton()
    });
    setTimeout(function() {
        var popupHide = document.querySelectorAll('.t-popup:not(.t-popup_show)');
        for (var i = 0; i < popupHide.length; i++) {
            popupHide[i].style.display = 'none'
        }
    }, 300);
    t702__triggerEvent(popup, 'tildamodal:close' + popupTooltipHook)
    $('#inserthere0').append($('#form444022248'));
}

function t702_sendPopupEventToStatistics(popupName) {
    var virtPage = '/tilda/popup/';
    var virtTitle = 'Popup: ';
    if (popupName.substring(0, 7) == '#popup:') {
        popupName = popupName.substring(7)
    }
    virtPage += popupName;
    virtTitle += popupName;
    if (window.Tilda && typeof Tilda.sendEventToStatistics == 'function') {
        Tilda.sendEventToStatistics(virtPage, virtTitle, '', 0)
    } else {
        if (ga) {
            if (window.mainTracker != 'tilda') {
                ga('send', {
                    hitType: 'pageview',
                    page: virtPage,
                    title: virtTitle
                })
            }
        }
        if (window.mainMetrika && window[window.mainMetrika]) {
            window[window.mainMetrika].hit(virtPage, {
                title: virtTitle,
                referer: window.location.href
            })
        }
    }
}

function t702_onSuccess(form) {
    t_onFuncLoad('t_forms__onSuccess', function() {
        t_forms__onSuccess(form)
    })
}

function t702__lazyLoad() {
    if (window.lazy === 'y' || document.getElementById('allrecords').getAttribute('data-tilda-lazy') === 'yes') {
        t_onFuncLoad('t_lazyload_update', function() {
            t_lazyload_update()
        })
    }
}

function t702__triggerEvent(el, eventName) {
    var event;
    if (typeof window.CustomEvent === 'function') {
        event = new CustomEvent(eventName)
    } else if (document.createEvent) {
        event = document.createEvent('HTMLEvents');
        event.initEvent(eventName, !0, !1)
    } else if (document.createEventObject) {
        event = document.createEventObject();
        event.eventType = eventName
    }
    event.eventName = eventName;
    if (el.dispatchEvent) {
        el.dispatchEvent(event)
    } else if (el.fireEvent) {
        el.fireEvent('on' + event.eventType, event)
    } else if (el[eventName]) {
        el[eventName]()
    } else if (el['on' + eventName]) {
        el['on' + eventName]()
    }
}

function t886_init(recid) {
    var rec = document.querySelector('#rec' + recid);
    if (!rec) return;
    var notificationBlock = rec.querySelector('.t886');
    var closeButton = rec.querySelector('.t886__btn');
    var storageItem = notificationBlock.getAttribute('data-storage-item');
    var lastOpen = null;
    if (typeof localStorage === 'object') {
        try {
            lastOpen = localStorage.getItem(storageItem)
        } catch (error) {
            console.log('Your web browser does not support localStorage. Error status: ', error)
        }
    }
    if (!lastOpen) {
        notificationBlock.classList.remove('t886_closed')
    }
    if (closeButton) {
        closeButton.addEventListener('click', function(event) {
            notificationBlock.classList.add('t886_closed');
            if (typeof localStorage === 'object') {
                try {
                    localStorage.setItem(storageItem, Math.floor(Date.now() / 1000))
                } catch (error) {
                    console.log('Your web browser does not support localStorage. Error status: ', error)
                }
            }
            event.preventDefault()
        })
    }
}

function t390_initPopup(recId) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var container = rec.querySelector('.t390');
    if (!container) return;
    rec.setAttribute('data-animationappear', 'off');
    rec.style.opacity = 1;
    var popup = rec.querySelector('.t-popup');
    var popupTooltipHook = popup.getAttribute('data-tooltip-hook');
    var analitics = popup.getAttribute('data-track-popup');
    var popupCloseBtn = popup.querySelector('.t-popup__close');
    var hrefs = rec.querySelectorAll('a[href*="#"]');
    var escapeEvent = t390_escClosePopup.bind(this, recId);
    if (popupTooltipHook) {
        var recBlocks = document.querySelectorAll('.r');
        t_onFuncLoad('t_popup__addAttributesForAccessibility', function() {
            t_popup__addAttributesForAccessibility(popupTooltipHook)
        });
        for (var i = 0; i < recBlocks.length; i++) {
            recBlocks[i].addEventListener('click', function(event) {
                var target = event.target;
                var href = target.closest('a[href="' + popupTooltipHook + '"]') ? target : !1;
                if (!href) return;
                event.preventDefault();
                t390_showPopup(recId, escapeEvent);
                t_onFuncLoad('t_popup__resizePopup', function() {
                    t_popup__resizePopup(recId)
                });
                t390__lazyLoad();
                if (analitics && window.Tilda) {
                    Tilda.sendEventToStatistics(analitics, popupTooltipHook)
                }
            });
            t_onFuncLoad('t_popup__addClassOnTriggerButton', function() {
                t_popup__addClassOnTriggerButton(recBlocks[i], popupTooltipHook)
            })
        }
    }
    popup.addEventListener('scroll', t_throttle(function() {
        t390__lazyLoad()
    }));
    popup.addEventListener('click', function(event) {
        if (event.target === this) t390_closePopup(recId, escapeEvent)
    });
    popupCloseBtn.addEventListener('click', function() {
        t390_closePopup(recId, escapeEvent)
    });
    for (var i = 0; i < hrefs.length; i++) {
        hrefs[i].addEventListener('click', function() {
            var url = this.getAttribute('href');
            if (!url || url.substring(0, 7) != '#price:') {
                t390_closePopup(recId, escapeEvent);
                if (!url || url.substring(0, 7) == '#popup:') {
                    setTimeout(function() {
                        document.body.classList.add('t-body_popupshowed')
                    }, 300)
                }
            }
        })
    }
    var curPath = window.location.pathname;
    var curFullPath = window.location.origin + curPath;
    var isAndroid = /(android)/i.test(navigator.userAgent);
    if (isAndroid) {
        var selects = 'a[href^="#"]:not([href="#"]):not([href^="#price"]):not([href^="#popup"]):not([href^="#prodpopup"]):not([href^="#order"]):not([href^="#!"]),' + 'a[href^="' + curPath + '#"]:not([href*="#!/tproduct/"]):not([href*="#!/tab/"]):not([href*="#popup"]),' + 'a[href^="' + curFullPath + '#"]:not([href*="#!/tproduct/"]):not([href*="#!/tab/"]):not([href*="#popup"])';
        var selectors = rec.querySelectorAll(selects);
        for (var i = 0; i < selectors.length; i++) {
            selectors[i].addEventListener('click', function(event) {
                var hash = this.hash.trim();
                if (window.location.hash) {
                    setTimeout(function() {
                        window.location.href = hash
                    }, 50)
                }
            })
        }
    }

    function t390_escClosePopup(recId) {
        if (arguments[1].key === 'Escape') t390_closePopup(recId, escapeEvent)
    }
}

function t390_showPopup(recId, escapeEvent) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var container = rec.querySelector('.t390');
    if (!container) return;
    var popup = rec.querySelector('.t-popup');
    var documentBody = document.body;
    t_onFuncLoad('t_popup__showPopup', function() {
        t_popup__showPopup(popup)
    });
    documentBody.classList.add('t-body_popupshowed');
    documentBody.classList.add('t390__body_popupshowed');
    document.addEventListener('keydown', escapeEvent)
}

function t390_closePopup(recId, escapeEvent) {
    var rec = document.getElementById('rec' + recId);
    var popup = rec.querySelector('.t-popup');
    var popupActive = document.querySelector('.t-popup.t-popup_show');
    if (popup === popupActive) {
        document.body.classList.remove('t-body_popupshowed');
        document.body.classList.remove('t390__body_popupshowed')
    }
    popup.classList.remove('t-popup_show');
    t_onFuncLoad('t_popup__addFocusOnTriggerButton', function() {
        t_popup__addFocusOnTriggerButton()
    });
    setTimeout(function() {
        var popupHide = document.querySelectorAll('.t-popup:not(.t-popup_show)');
        for (var i = 0; i < popupHide.length; i++) {
            popupHide[i].style.display = 'none'
        }
    }, 300);
    document.removeEventListener('keydown', escapeEvent)
}

function t390_sendPopupEventToStatistics(popupName) {
    var virtPage = '/tilda/popup/';
    var virtTitle = 'Popup: ';
    if (popupName.substring(0, 7) == '#popup:') {
        popupName = popupName.substring(7)
    }
    virtPage += popupName;
    virtTitle += popupName;
    if (window.Tilda && typeof Tilda.sendEventToStatistics == 'function') {
        Tilda.sendEventToStatistics(virtPage, virtTitle, '', 0)
    } else {
        if (ga) {
            if (window.mainTracker != 'tilda') {
                ga('send', {
                    hitType: 'pageview',
                    page: virtPage,
                    title: virtTitle
                })
            }
        }
        if (window.mainMetrika && window[window.mainMetrika]) {
            window[window.mainMetrika].hit(virtPage, {
                title: virtTitle,
                referer: window.location.href
            })
        }
    }
}

function t390__lazyLoad() {
    var allRecords = document.getElementById('allrecords');
    if (window.lazy === 'y' || (allRecords && allRecords.getAttribute('data-tilda-lazy') === 'yes')) {
        t_onFuncLoad('t_lazyload_update', function() {
            t_lazyload_update()
        })
    }
}

function t270_scroll(hash, offset) {
    if (!hash) return;
    t270_checkLoad(hash, offset);
    if (hash.indexOf('#!/tproduct/') !== -1 || hash.indexOf('#!/tab/') !== -1) {
        return !0
    }
    var target;
    try {
        if (hash.substring(0, 1) === '#') {
            target = document.getElementById(hash.substring(1))
        } else {
            target = document.querySelector(hash)
        }
    } catch (event) {
        console.log('Exception t270: ' + event.message);
        return !0
    }
    if (!target) {
        target = document.querySelector('a[name="' + hash.substr(1) + '"]');
        if (!target) return !0
    }
    var isHistoryChangeAllowed = window.location.hash !== hash;
    var wrapperBlock = document.querySelector('.t270');
    var dontChangeHistory = wrapperBlock ? Boolean(wrapperBlock.getAttribute('data-history-disabled')) : !1;
    target = parseInt((target.getBoundingClientRect().top + window.pageYOffset) - offset, 10);
    target = Math.abs(target);
    if ('scrollBehavior' in document.documentElement.style) {
        t_throttle(window.scrollTo({
            left: 0,
            top: target,
            behavior: 'smooth',
        }), 500)
    } else {
        t270_scrollToEl(target)
    }
    if (!dontChangeHistory && isHistoryChangeAllowed) {
        if (history.pushState) {
            history.pushState(null, null, hash)
        } else {
            window.location.hash = hash
        }
        isHistoryChangeAllowed = !1
    }
    return !0
}

function t270_checkLoad(hash, offset) {
    if (window.t270_loadChecked) return;
    var sliderWrappers = document.body.querySelectorAll('.t-slds__items-wrapper');
    if (!sliderWrappers.length) return;
    var lastWrapper = sliderWrappers[sliderWrappers.length - 1];
    var sliderImgs = lastWrapper ? lastWrapper.querySelectorAll('.t-slds__bgimg') : [];
    var lastImg = sliderImgs[sliderImgs.length - 1];
    var imageUrl = lastImg ? window.getComputedStyle(lastImg).backgroundImage : '';
    imageUrl = imageUrl.substring(5, imageUrl.length - 2);
    var preloaderImg = document.createElement('img');
    preloaderImg.src = imageUrl ? imageUrl : '';
    preloaderImg.addEventListener('load', function() {
        t270_scroll(hash, offset);
        window.t270_loadChecked = !0
    })
}

function t270_scrollToEl(target) {
    var documentHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);
    var bottomViewportPoint = documentHeight - document.documentElement.clientHeight;
    if (target > bottomViewportPoint) target = bottomViewportPoint;
    if (target === window.pageYOffset) return !1;
    var currentPosition = window.pageYOffset;
    var step = (target - currentPosition) / 30;
    var difference = window.pageYOffset;
    var timerID = setInterval(function() {
        difference += step;
        window.scrollTo(0, difference);
        document.body.setAttribute("data-scrollable", "true");
        if ((target - currentPosition < 0 && window.pageYOffset <= target) || (target - currentPosition > 0 && window.pageYOffset >= target)) {
            clearInterval(timerID);
            document.body.removeAttribute("data-scrollable")
        }
    }, 10)
}
